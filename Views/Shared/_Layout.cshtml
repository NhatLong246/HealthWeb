<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - HealthWeb</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/home.css?v=@DateTime.Now.Ticks" asp-append-version="true" />
    @await RenderSectionAsync("Styles", required: false)
    <style>
        /* Light Mode - Orange Pink Theme (With Grid Pattern) */
        body.light-mode {
            background: #fff5f5 !important;
            color: #7c2d12 !important;
            background-image: 
                linear-gradient(rgba(251, 146, 60, 0.6) 1px, transparent 1px),
                linear-gradient(90deg, rgba(251, 146, 60, 0.6) 1px, transparent 1px) !important;
            background-size: 30px 30px !important;
            animation: gridMove 15s linear infinite !important;
        }
        
        /* Dark Mode - Original Blue Theme (With Grid Pattern) */
        body.dark-mode {
            background: #1e293b !important;
            color: #ffffff !important;
            background-image: 
                linear-gradient(rgba(78, 222, 128, 0.1) 1px, transparent 1px),
                linear-gradient(90deg, rgba(78, 222, 128, 0.1) 1px, transparent 1px) !important;
            background-size: 30px 30px !important;
            animation: gridMove 15s linear infinite !important;
        }
        

        
        @@keyframes gridMove {
            0% { background-position: 0 0; }
            100% { background-position: 30px 30px; }
        }
    </style>
</head>
<body class="dark-mode">
    <!-- Background Pattern -->
    <div class="background-pattern"></div>
    
    <!-- Header -->
    <header class="header">
        <div class="logo">
            <i class="fas fa-heart-pulse"></i>
            <span>HealthWeb</span>
        </div>
        
        <!-- Home button for non-home pages -->
        @if (ViewContext.RouteData.Values["controller"]?.ToString() != "Home" || ViewContext.RouteData.Values["action"]?.ToString() != "Index")
        {
            <a href="/" class="home-btn" title="Về trang chủ">
                <i class="fas fa-home"></i>
            </a>
        }
        
        <nav class="nav-links">
            <a href="/E-Book" class="requires-auth">Sức khỏe chung</a>
            <a href="/Audiobooks" class="requires-auth">Bảng xếp hạng</a>
            <a href="/Categories" class="requires-auth">Dinh dưỡng</a>
            <a href="/Library" class="requires-auth">Thống kê</a>
        </nav>
        
        <div class="header-actions">
            <i class="fas fa-bell requires-auth" id="notifBtn"></i>
            <i class="fas fa-search"></i>
            <i class="fas fa-moon" id="theme-toggle"></i>
            <a href="/Account/Login" id="loginBtn" class="btn btn-secondary">Đăng nhập</a>
            <a href="/Account/Register" id="registerBtn" class="btn btn-primary">Đăng ký</a>
        </div>
    </header>

    <!-- Main Content -->
    <main>
        @RenderBody()
    </main>

    <!-- Footer -->
    <footer class="footer">
        <div class="footer-content">
            <div class="footer-section">
                <h3>Về HealthWeb</h3>
                <p>Cùng bạn xây dựng lối sống khỏe mạnh mỗi ngày: luyện tập, dinh dưỡng và nghỉ ngơi khoa học.</p>
            </div>
            <div class="footer-section">
                <h3>Liên kết</h3>
                <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                <a href="#">Điều khoản</a>
                <a href="#">Liên hệ</a>
                <a href="#">Trợ giúp</a>
            </div>
            <div class="footer-section">
                <h3>Chuyên mục</h3>
                <a href="#">Dinh dưỡng</a>
                <a href="#">Luyện tập</a>
                <a href="#">Giấc ngủ</a>
                <a href="#">Thói quen sống</a>
            </div>
            <div class="footer-section">
                <h3>Hỗ trợ</h3>
                <a href="#">Câu hỏi thường gặp</a>
                <a href="#">Hỗ trợ kỹ thuật</a>
                <a href="#">Góp ý</a>
                <a href="#">Báo lỗi</a>
            </div>
        </div>
        <div class="footer-bottom">
            <p>&copy; 2025 HealthWeb</p>
        </div>
    </footer>

    <script src="~/js/home.js" asp-append-version="true"></script>
    <!-- Notification Drawer -->
    <div class="drawer-overlay" id="notifOverlay" style="display:none;"></div>
    <aside class="drawer" id="notifDrawer" aria-hidden="true">
        <div class="drawer-header">
            <div class="drawer-title"><i class="fas fa-bell"></i> Thông báo</div>
            <button class="drawer-close" id="notifClose" aria-label="Đóng"><i class="fas fa-xmark"></i></button>
        </div>
        <div class="drawer-user" id="notifUser">
            <div class="avatar"><i class="fas fa-user"></i></div>
            <div class="user-meta">
                <div class="name">Khách</div>
                <div class="note">Đăng nhập để xem thông báo cá nhân</div>
            </div>
        </div>
        <div class="drawer-body">
            <ul class="notif-list" id="notifList">
                <li class="muted">Đang tải...</li>
            </ul>
        </div>
    </aside>
    <script>
        // Manual theme toggle only
        function toggleTheme() {
            const body = document.body;
            const themeToggle = document.getElementById('theme-toggle');
            
            if (body.classList.contains('light-mode')) {
                // Switch to dark mode
                body.classList.remove('light-mode');
                body.classList.add('dark-mode');
                localStorage.setItem('theme', 'dark');
                themeToggle.className = 'fas fa-moon';
            } else {
                // Switch to light mode
                body.classList.remove('dark-mode');
                body.classList.add('light-mode');
                localStorage.setItem('theme', 'light');
                themeToggle.className = 'fas fa-sun';
            }
        }
        
        // Initialize theme
        function initTheme() {
            const savedTheme = localStorage.getItem('theme');
            const body = document.body;
            const themeToggle = document.getElementById('theme-toggle');
            
            if (savedTheme) {
                // Use saved theme
                if (savedTheme === 'light') {
                    body.classList.remove('dark-mode');
                    body.classList.add('light-mode');
                    themeToggle.className = 'fas fa-sun';
                } else {
                    body.classList.remove('light-mode');
                    body.classList.add('dark-mode');
                    themeToggle.className = 'fas fa-moon';
                }
            } else {
                // Default to dark mode
                body.classList.add('dark-mode');
                themeToggle.className = 'fas fa-moon';
            }
        }
        
        // Event listeners
        document.addEventListener('DOMContentLoaded', function() {
            initTheme();
            
            // Theme toggle button
            document.getElementById('theme-toggle').addEventListener('click', function() {
                toggleTheme();
            });

            // Require-auth links: show notice if not logged in
            function isAuthenticated(){
                try { return localStorage.getItem('hw_is_auth') === 'true'; } catch { return false; }
            }
            document.querySelectorAll('.requires-auth').forEach(el => {
                el.addEventListener('click', function(e){
                    if (!isAuthenticated()) {
                        e.preventDefault();
                        // lightweight inline notification
                        const n = document.createElement('div');
                        n.textContent = 'Vui lòng đăng nhập để sử dụng tính năng này.';
                        n.style.cssText = 'position:fixed;top:20px;right:20px;background:#ef4444;color:#fff;padding:12px 16px;border-radius:10px;z-index:10000;box-shadow:0 10px 30px rgba(0,0,0,.3)';
                        document.body.appendChild(n);
                        setTimeout(()=>{ n.remove(); }, 2500);
                        return;
                    }
                    // open drawer if bell or elements open it explicitly
                    if (this.id === 'notifBtn') {
                        e.preventDefault();
                        openDrawer();
                        loadNotifications();
                    }
                });
            });

            // Swap auth buttons -> user menu when logged in (client-side)
            const loginBtn = document.getElementById('loginBtn');
            const registerBtn = document.getElementById('registerBtn');
            function renderUserMenu(){
                const actions = loginBtn?.parentElement;
                if(!actions) return;
                if(isAuthenticated()){
                    if(loginBtn) loginBtn.style.display='none';
                    if(registerBtn) registerBtn.style.display='none';
                    if(!document.getElementById('userMenu')){
                        const username = localStorage.getItem('hw_username') || 'User';
                        const menu = document.createElement('div');
                        menu.id = 'userMenu';
                        menu.style.display = 'inline-flex';
                        menu.style.alignItems = 'center';
                        menu.style.gap = '.6rem';
                        menu.innerHTML = `<span title="Tài khoản"><i class="fas fa-user"></i></span><span>${username}</span><button id="logoutBtn" class="btn btn-secondary">Đăng xuất</button>`;
                        actions.appendChild(menu);
                        document.getElementById('logoutBtn')?.addEventListener('click', function(){ try{ localStorage.removeItem('hw_is_auth'); localStorage.removeItem('hw_username'); }catch{} window.location.href='/'; });
                    }
                } else {
                    if(loginBtn) loginBtn.style.display='inline-flex';
                    if(registerBtn) registerBtn.style.display='inline-flex';
                    const existing = document.getElementById('userMenu');
                    if(existing) existing.remove();
                }
            }
            renderUserMenu();

            const overlay = document.getElementById('notifOverlay');
            const drawer = document.getElementById('notifDrawer');
            const closeBtn = document.getElementById('notifClose');

            function openDrawer(){ drawer.classList.add('open'); overlay.classList.add('open'); overlay.style.display='block'; }
            function closeDrawer(){ drawer.classList.remove('open'); overlay.classList.remove('open'); setTimeout(()=>{ overlay.style.display='none'; }, 250); }
            overlay?.addEventListener('click', closeDrawer);
            closeBtn?.addEventListener('click', closeDrawer);

            async function loadNotifications(){
                const list = document.getElementById('notifList');
                if(!list) return;
                list.innerHTML = '<li class="muted">Đang tải...</li>';
                try {
                    const res = await fetch('/Notifications/List');
                    if(!res.ok) throw new Error('Fetch failed');
                    const data = await res.json();
                    if(!Array.isArray(data) || data.length===0){ list.innerHTML = '<li class="muted">Chưa có thông báo.</li>'; return; }
                    list.innerHTML = data.map(n=>`
                        <li>
                            <div class="icon"><i class="fas ${n.icon || 'fa-bell'}"></i></div>
                            <div class="content">
                                <div>${n.title}</div>
                                <div class="time">${n.time || ''}</div>
                            </div>
                        </li>
                    `).join('');
                } catch {
                    list.innerHTML = '<li class="muted">Không thể tải thông báo.</li>';
                }
            }
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
